{"version":3,"sources":["FirstPage.js","Button.js","SecondPage.js","App.js","index.js"],"names":["FirstPage","props","react_default","a","createElement","className","src","onClick","toggle","Button","stage","isSelected","toggleSelected","answer","flag","isCorrect","SecondPage","_React$useState","React","useState","_React$useState2","Object","slicedToArray","_React$useState3","_React$useState4","questions","setquestions","_React$useState5","_React$useState6","setstage","getbuttons","id","map","question","answers","ans","ansid","qid","prevquestions","objectSpread2","useEffect","fetch","then","res","json","data","questionData","results","difficulty","category","nanoid","concat","toConsumableArray","incorrect_answers","correct_answer","sort","Math","random","mcqs1","score","correct","calculatescore","react_confetti_min_default","App","start","setstart","oldstart","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.02ea0acc.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./App.css\"\r\nexport default function FirstPage(props){\r\n    return(\r\n        <div className=\"firstbody\">\r\n        <div className=\"firstpage\">\r\n        <img src=\"https://cdn-icons-png.flaticon.com/512/390/390933.png\" />\r\n        <h1>Quizzical</h1>\r\n        <h3>Quiz for the fun</h3>\r\n        \r\n        <button onClick={props.toggle}>Start Quiz</button>\r\n        </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport \"./App.css\"\r\nexport default function Button(props){\r\n    //console.log(\"Button()\" + props.isSelected)\r\n    if(props.stage === 1){\r\n        return(\r\n            <div>\r\n                <button className = {props.isSelected===true ? \"single-button-blue\" : \"single-button-white\"} onClick={props.toggleSelected}>\r\n                    {props.answer}\r\n                </button>\r\n            </div>)\r\n    }\r\n    else{\r\n        \r\n        let flag=1\r\n        if(props.isSelected===true){\r\n            if(props.isCorrect===true){\r\n                \r\n                flag=2 //green\r\n                \r\n            }\r\n            else{\r\n                flag=3 //red\r\n            }\r\n        }\r\n        else{\r\n            if(props.isCorrect===true){\r\n                flag=2 //green\r\n            }\r\n        }\r\n        \r\n        function getclass(){\r\n            if(flag===1){\r\n                return \"single-button-white\"\r\n            }\r\n            else if(flag===2){\r\n                return \"correct-button\"\r\n            }\r\n            else{\r\n                return \"wrong-button\"\r\n            }\r\n        }\r\n        \r\n        return(\r\n            <div>\r\n                <button className = {getclass()} >\r\n                    {props.answer}\r\n                </button>\r\n            </div>\r\n            )\r\n    }\r\n}","import React from \"react\"\r\nimport Button from \"./Button\"\r\nimport {nanoid} from \"nanoid\"\r\nimport Confetti from \"react-confetti\"\r\nimport \"./App.css\"\r\nexport default function SecondPage(props){\r\n    \r\n    \r\n    const[database, setdatabase] = React.useState([])\r\n    const [questions, setquestions] = React.useState([])\r\n    const [stage, setstage] = React.useState(1)\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    function changestage(){\r\n        setstage(2)\r\n    \r\n    \r\n    }\r\n    \r\n    \r\n    function toggleSelected(ansid, qid){\r\n        \r\n        \r\n        setquestions(prevquestions => prevquestions.map(question => {\r\n            return{\r\n                ...question,\r\n                answers : question.answers.map(ans => {\r\n                    if(ans.id === ansid){\r\n                        return ({...ans, isSelected : !ans.isSelected})\r\n                    }\r\n                    else if(ans.id !== ansid && question.id===qid){\r\n                        return({...ans, isSelected : false})\r\n                    }\r\n                    else{\r\n                        return ans\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        ) \r\n    }\r\n    \r\n    \r\n    React.useEffect(function(){\r\n        \r\n        fetch(\"https://opentdb.com/api.php?amount=5&category=15&difficulty=medium&type=multiple\")\r\n        .then(res=>res.json())\r\n        .then((data) => {\r\n            const questionData = data.results.map((question) => {\r\n            return {\r\n                question: question.question,\r\n                difficulty: question.difficulty,\r\n                category: question.category,\r\n                id: nanoid(),\r\n                answers: [\r\n                ...question.incorrect_answers.map((answer) => ({\r\n                    answer: answer,\r\n                    isCorrect: false,\r\n                    isSelected: false,\r\n                    id: nanoid(),\r\n                })),\r\n                {\r\n                    answer: question.correct_answer,\r\n                    isCorrect: true,\r\n                    isSelected: false,\r\n                    id: nanoid(),\r\n                },\r\n                ].sort(() => Math.random() - 0.5),\r\n            };\r\n            });\r\n            setquestions(questionData);\r\n        })\r\n    }, [])\r\n    \r\n    \r\n  \r\n    function calculatescore(){\r\n        let correct = 0\r\n        questions.map(question=>{\r\n            question.answers.map(ans => {\r\n                if(ans.isCorrect===true && ans.isSelected===true){\r\n                    correct++\r\n                }\r\n            })\r\n        })\r\n        return correct\r\n    }\r\n          \r\n            \r\n        function getbuttons(id){\r\n            const buttons = questions.map(question => {\r\n                if(question.id === id){\r\n                    const group = question.answers.map(ans => {\r\n                        return(<Button id={ans.id} answer={ans.answer} stage={stage} \r\n                        isCorrect={ans.isCorrect} isSelected={ans.isSelected} \r\n                        toggleSelected={()=>toggleSelected(ans.id, question.id)}/>)\r\n                    })\r\n                    return group\r\n                }\r\n            })\r\n            return buttons\r\n        } \r\n     \r\n    \r\n    const mcqs1 = questions.map(question => {\r\n        \r\n        return <div><div className=\"question\">{question.question}</div><div className=\"buttons-set\">{getbuttons(question.id)}</div></div>\r\n    })\r\n    \r\n   \r\n    \r\n    \r\n    if(stage === 1){\r\n        return(\r\n            <div className=\"secondpage\">\r\n            {mcqs1}\r\n            <div className=\"checkbutton\">\r\n            <button onClick={changestage}>Check answers</button>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        \r\n        const score = calculatescore()\r\n        return(\r\n            <div className=\"secondpage\">\r\n                {score===5 && <Confetti />}\r\n                {mcqs1}\r\n                <div className=\"footer\">\r\n                    <h2 className=\"score\">You Scored {score}/5 Correct Answers</h2>\r\n                    <button onClick={props.toggle}>Play Again</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import './App.css';\nimport React from \"react\"\nimport FirstPage from \"./FirstPage\"\nimport SecondPage from \"./SecondPage\"\nexport default function App(){\n    const [start, setstart] = React.useState(false)\n    function toggle(){\n        setstart(oldstart => !oldstart)\n        \n    }\n    return(<div>{start===true ? <SecondPage toggle={()=>toggle()}/> : <FirstPage toggle={()=>toggle()}/>}</div>)\n      \n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./App.css\"\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}